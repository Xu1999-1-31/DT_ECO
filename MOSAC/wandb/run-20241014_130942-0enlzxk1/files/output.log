tensor([232.])
()
actions: 12
12
sa10_reg_2_/D sa10_reg_2_/Q
tensor([232.])
()
actions: 2
2
/home/jiajiexu/DT_ECO/MOSAC/DT_ECO_Buffer.py:78: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  'gate_features': th.tensor(self.gate_features[inds].clone().detach(), dtype=th.float32, device=device),
/home/jiajiexu/DT_ECO/MOSAC/DT_ECO_Buffer.py:86: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  'gate_features': th.tensor(self.next_gate_features[inds].clone().detach(), dtype=th.float32, device=device),
tensor([232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232.,
        232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232.,
        232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232.,
        232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232.,
        232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232.,
        232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232.,
        232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232.,
        232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232.,
        232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232.,
        232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232., 232.,
        232., 232., 232., 232., 232., 232., 232., 232.])
Traceback (most recent call last):
  File "/home/jiajiexu/DT_ECO/MOSAC/DT_ECO.py", line 50, in <module>
    agent.train(
  File "/home/jiajiexu/DT_ECO/MOSAC/mosac_dicrete_action.py", line 541, in train
    self.update()
  File "/home/jiajiexu/DT_ECO/MOSAC/mosac_dicrete_action.py", line 405, in update
    _, log_probs, action_probs = self.actor.get_action(mb_next_obs)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/DT_ECO/MOSAC/mosac_dicrete_action.py", line 131, in get_action
    logits = self(obs)
             ^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/DT_ECO/MOSAC/mosac_dicrete_action.py", line 125, in forward
    logits = self.actor_net(g, img, padding_mask, Gate_feature)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/DT_ECO/Model/models.py", line 182, in forward
    pooled_nf = sum_nf / (num_masked_nodes + 1e-6) # avoide division by zero
                ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
RuntimeError: The size of tensor a (32) must match the size of tensor b (128) at non-singleton dimension 1
