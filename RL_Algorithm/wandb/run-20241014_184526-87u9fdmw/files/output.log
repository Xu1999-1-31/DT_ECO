Traceback (most recent call last):
  File "/home/jiajiexu/DT_ECO/MOSAC/DT_ECO.py", line 49, in <module>
    agent.train(
  File "/home/jiajiexu/DT_ECO/MOSAC/mosac_dicrete_action.py", line 563, in train
    self.update()
  File "/home/jiajiexu/DT_ECO/MOSAC/mosac_dicrete_action.py", line 469, in update
    qf2_values = (self.qf2(mb_obs) * self.weights_tensor).sum(dim = -1)
                  ^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/DT_ECO/MOSAC/mosac_dicrete_action.py", line 86, in forward
    q_values = self.critic(g, img, padding_mask, Gate_feature, Gate_sizes)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/DT_ECO/Model/models.py", line 208, in forward
    nf = self.gnn(g)
         ^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/DT_ECO/Model/models.py", line 135, in forward
    nf = self.gnn_layers[i](g, nf)
         ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/DT_ECO/Model/models.py", line 100, in forward
    g.update_all(lambda edges: self.message_func_netarc(edges, is_forward=True), fn.mean('msg_n', 'n_n_mean'), etype='netarc')
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/dgl/heterograph.py", line 5112, in update_all
    ndata = core.message_passing(
            ^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/dgl/core.py", line 406, in message_passing
    msgdata = invoke_edge_udf(
              ^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/dgl/core.py", line 96, in invoke_edge_udf
    return func(ebatch)
           ^^^^^^^^^^^^
  File "/home/jiajiexu/DT_ECO/Model/models.py", line 100, in <lambda>
    g.update_all(lambda edges: self.message_func_netarc(edges, is_forward=True), fn.mean('msg_n', 'n_n_mean'), etype='netarc')
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/DT_ECO/Model/models.py", line 67, in message_func_netarc
    edge_features = edges.data['feature']  # edge feature
                    ~~~~~~~~~~^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/dgl/frame.py", line 688, in __getitem__
    return self._columns[name].data
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/dgl/frame.py", line 259, in data
    self.storage = F.copy_to(
                   ^^^^^^^^^^
  File "/home/jiajiexu/anaconda3/lib/python3.11/site-packages/dgl/backend/pytorch/tensor.py", line 143, in copy_to
    return input.cuda(**kwargs)
           ^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
